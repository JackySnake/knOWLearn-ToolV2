package TermExtraction;

import InitialScheme.Sources.Term;
import Utils.PythonConnection.ConnectionManager;
import TermDisambiguation.DisambiguateTermsGUI;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

public class ExtractTermsGUI extends javax.swing.JFrame {
    ConnectionManager con;
    private double ThresholdCTValue = 0.01; 
    private double ThresholdSTValue = 0.1;
    private boolean canRecomputeTerms = false;
    /**
     * Creates new form ExtractTermsGUI
     */
    public ExtractTermsGUI() throws IOException {
        initComponents();
         con = ConnectionManager.getConnection();
         this.ThresholdST.setMaximum(999);
         this.ThresholdST.setMinimum(2);
         this.ThresholdCT.setMaximum(999);
         this.ThresholdCT.setMinimum(2);
         this.ThresholdST.setValue((int)(this.ThresholdSTValue*1000));
         this.ThresholdCT.setValue((int)(this.ThresholdCTValue*1000));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        file = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        TermsScrollPane = new javax.swing.JScrollPane();
        TermsList = new javax.swing.JList();
        ThresholdST = new javax.swing.JSlider();
        ThresholdCT = new javax.swing.JSlider();
        MessageDialog = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FieldThresholdST = new javax.swing.JTextField();
        FieldThresholdCT = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("::KnOWLearn:: - Term Extraction");

        jLabel1.setText("Select file or directory: ");

        jButton1.setText("Explore");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TermsScrollPane.setViewportView(TermsList);

        ThresholdST.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThresholdSTMouseReleased(evt);
            }
        });
        ThresholdST.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ThresholdSTStateChanged(evt);
            }
        });

        ThresholdCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ThresholdCTMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ThresholdCTMouseReleased(evt);
            }
        });
        ThresholdCT.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ThresholdCTStateChanged(evt);
            }
        });

        MessageDialog.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N

        jLabel2.setText("Threshold for Simple Terms");

        jLabel3.setText("Threshold for Composed Terms");

        FieldThresholdST.setEditable(false);
        FieldThresholdST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldThresholdSTActionPerformed(evt);
            }
        });

        FieldThresholdCT.setEditable(false);
        FieldThresholdCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldThresholdCTActionPerformed(evt);
            }
        });

        jButton2.setText("Disambiguate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Trash");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(MessageDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TermsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ThresholdST, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FieldThresholdST, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FieldThresholdCT, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ThresholdCT, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MessageDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ThresholdST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FieldThresholdST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ThresholdCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FieldThresholdCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addContainerGap())
                    .addComponent(TermsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.MessageDialog.setText("Searching terms in the file(s), wait please!");
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.setDialogTitle("Select one directory or one or more files");
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.file.setText(chooser.getSelectedFile().getAbsolutePath());
            this.disable();
            String response = this.con.send("terms for Path:"+this.file.getText());
            this.enable(true);
            this.MessageDialog.setText("");

            if(response.length() > 3)
                response = response.substring(2,response.length()-2);
            this.setModelTerms(response.split("', '"));
            this.ChangeThresholdCT();
            this.ChangeThresholdST();
            this.canRecomputeTerms = true;
        }
        this.MessageDialog.setText("");

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void FieldThresholdSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldThresholdSTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldThresholdSTActionPerformed

    private void FieldThresholdCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldThresholdCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldThresholdCTActionPerformed

    private void ThresholdSTStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ThresholdSTStateChanged

    }//GEN-LAST:event_ThresholdSTStateChanged

    private void ThresholdCTStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ThresholdCTStateChanged

    }//GEN-LAST:event_ThresholdCTStateChanged

    private void ThresholdSTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThresholdSTMouseReleased
         if(this.canRecomputeTerms){
             this.ChangeThresholdST();
             this.disable();
            String response = this.con.send("recompute: "+this.ThresholdSTValue+","+this.ThresholdCTValue);
            this.enable();
            if(response.length() > 3)
                response = response.substring(2,response.length()-2);
            this.setModelTerms(response.split("', '"));
        }
         
    }//GEN-LAST:event_ThresholdSTMouseReleased

    private void ThresholdCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThresholdCTMouseExited
        
    }//GEN-LAST:event_ThresholdCTMouseExited

    private void ThresholdCTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThresholdCTMouseReleased
        if (this.canRecomputeTerms) {
            this.ChangeThresholdCT();
            this.disable();
            String response = this.con.send("recompute: " + this.ThresholdSTValue + "," + this.ThresholdCTValue);
            this.enable();
            if (response.length() > 3)
                response = response.substring(2, response.length() - 2);
            this.setModelTerms(response.split("', '"));
        }
        
    }//GEN-LAST:event_ThresholdCTMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String MetadataTerms = this.con.send("disambiguate terms");
        DisambiguateTermsGUI dis = new DisambiguateTermsGUI(this.con, MetadataTerms);
        dis.setVisible(true);
        this.dispose();
        //System.err.println(MetadataTerms);
        this.getDisambiguatedTerms(MetadataTerms);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String response = this.con.send("delete term: "+this.TermsList.getSelectedValue());
        if(response.length() > 3)
                response = response.substring(2,response.length()-2);
            this.setModelTerms(response.split("', '"));
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void ChangeThresholdCT(){
        this.ThresholdCTValue = ((double)this.ThresholdCT.getValue())/1000.0;
        this.FieldThresholdCT.setText(this.ThresholdCTValue+"");
    }
    
    private void ChangeThresholdST(){
        this.ThresholdSTValue =  ((double)this.ThresholdST.getValue())/1000.0;
        this.FieldThresholdST.setText(this.ThresholdSTValue+"");
    }
    
    private void setModelTerms(String[] terms){
        DefaultListModel modelterms = new DefaultListModel();
            for(String term : terms)
                modelterms.addElement(term);
            this.TermsList.setModel(modelterms);
    }
    
    private List<Term> getDisambiguatedTerms(String MDTerms){
        List<Term> Terms =  new ArrayList<Term>();
        for(String term : MDTerms.split("/Term/"))
            Terms.add(new Term(term));
        return Terms;
    }
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExtractTermsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExtractTermsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExtractTermsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExtractTermsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new ExtractTermsGUI().setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FieldThresholdCT;
    private javax.swing.JTextField FieldThresholdST;
    private javax.swing.JLabel MessageDialog;
    private javax.swing.JList TermsList;
    private javax.swing.JScrollPane TermsScrollPane;
    private javax.swing.JSlider ThresholdCT;
    private javax.swing.JSlider ThresholdST;
    private javax.swing.JTextField file;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
